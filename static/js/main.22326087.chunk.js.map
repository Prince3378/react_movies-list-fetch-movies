{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","ok","headers","get","includes","json","catch","Response","Error","FindMovie","getMovies","useState","setMovie","setQuery","isError","setIsError","zminna","setZminna","arr","getArr","getFetchetMovie","value","a","Title","toLowerCase","preparedMovie","Plot","Poster","imdbID","error","console","log","useEffect","handleClick","event","preventDefault","htmlFor","type","id","placeholder","onChange","target","length","onClick","disabled","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"uTAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAG,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOG,OACZC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,gBAAgDD,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAOK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,iBACGD,QADH,IACGA,OADH,EACGA,EAAOM,YACR,uBACA,mBAAGC,KAAI,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAOQ,QAAS,UAAQ,WAAjC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,8BCPZ,SAASC,EAASC,GACvB,OAAOC,MAAM,GAAD,OAHE,2CAGF,cAAiBD,IAC1BE,MAAK,SAAAC,GAAQ,IAAD,EACX,OAAKA,EAAIC,GAIT,UAAID,EAAIE,QAAQC,IAAI,uBAApB,OAAI,EAAiCC,SAAS,oBACrC,KAGFJ,EAAIK,OAPF,QASVC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uB,UCZAC,EAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C,EAA0BC,mBAAuB,MAAjD,mBAAO5B,EAAP,KAAc6B,EAAd,KACA,EAA0BD,mBAAiB,IAA3C,mBAAOd,EAAP,KAAcgB,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAsBN,mBAAkB,IAAxC,mBAAOO,EAAP,KAAYC,EAAZ,KAEMC,EAAe,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEAChB1B,EAASyB,GACZtB,MAAK,SAACC,GACL,GAAKA,EAAIuB,MAAMC,cAAcpB,SAASiB,EAAMG,eAA5C,CAIA,IAAMC,EAAuB,CAC3BrC,MAAOY,EAAIuB,MACXlC,YAAaW,EAAI0B,KACjBxC,OAAQc,EAAI2B,OACZpC,QAASS,EAAI2B,OACbhC,OAAQK,EAAI4B,QAGdhB,EAASa,OAEVnB,OAAM,SAAAuB,GACLd,GAAW,GAEXe,QAAQC,IAAI,QAASF,MApBH,2CAAH,sDAwBrBG,qBAAU,WACJjD,GACF2B,EAAUQ,KAEX,CAACA,IAEJ,IAAMe,EAAc,SAACC,GACnBA,EAAMC,iBACNf,EAAgBvB,GAChBgB,EAAS,IACTD,EAAS,MACTG,GAAW,IACPlB,GAASiB,IACXG,GAAWD,IAcf,OACE,qCACE,uBAAMhC,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQoD,QAAQ,cAAjC,yBAIA,qBAAKpD,UAAU,UAAf,SACE,uBACE,UAAQ,aACRqD,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZvD,UAAU,kBACVqC,MAAOxB,EACP2C,SAAU,SAACN,GACTrB,EAASqB,EAAMO,OAAOpB,YAK3BP,GACC,mBAAG9B,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACoB,IAAjBa,EAAM6C,OACL,wBACE,UAAQ,eACRL,KAAK,SACLrD,UAAU,kBACV2D,QAASV,EACTW,UAAQ,EALV,0BAUA,wBACE,UAAQ,eACRP,KAAK,SACLrD,UAAU,kBACV2D,QAASV,EAJX,4BAYHjB,GACC,qBAAKhC,UAAU,UAAf,SACE,wBACE,UAAQ,YACRqD,KAAK,SACLrD,UAAU,oBACV2D,QApEW,WACT,OAAV5D,GAAmBmC,EAAId,SAASrB,KAClC2B,EAAUQ,GACVC,EAAO,GAAD,mBAAKD,GAAL,CAAUnC,KAChBkC,GAAWD,KA4DH,qCAaPA,GACC,sBAAKhC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WCtIf8D,EAAM,WACjB,MAA4BlC,mBAAkB,IAA9C,mBAAOlB,EAAP,KAAeqD,EAAf,KAMA,OAJAd,qBAAU,WACRc,EAAUrD,KACT,IAGD,sBAAKT,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACE0B,UAAWoC,UCjBrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.22326087.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","// import { Movie } from './types/Movie';\nimport { MovieData } from './types/MovieData';\n// import { MovieData } from './types/MovieData';\n// import { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=e5c72b87';\n\nexport function getMovie(query: string): Promise<MovieData> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => {\n      if (!res.ok) {\n        return null;\n      }\n\n      if (res.headers.get('content-type')?.includes('application.json')) {\n        return null;\n      }\n\n      return res.json();\n    })\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState, useEffect } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  getMovies: (movies: Movie[]) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ getMovies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [isError, setIsError] = useState(false);\n  const [zminna, setZminna] = useState(false);\n  const [arr, getArr] = useState<Movie[]>([]);\n\n  const getFetchetMovie = async (value: string) => {\n    await getMovie(value)\n      .then((res) => {\n        if (!res.Title.toLowerCase().includes(value.toLowerCase())) {\n          return;\n        }\n\n        const preparedMovie: Movie = {\n          title: res.Title,\n          description: res.Plot,\n          imgUrl: res.Poster,\n          imdbUrl: res.Poster,\n          imdbId: res.imdbID,\n        };\n\n        setMovie(preparedMovie);\n      })\n      .catch(error => {\n        setIsError(true);\n        // eslint-disable-next-line no-console\n        console.log('errrr', error);\n      });\n  };\n\n  useEffect(() => {\n    if (movie) {\n      getMovies(arr);\n    }\n  }, [arr]);\n\n  const handleClick = (event: any) => {\n    event.preventDefault();\n    getFetchetMovie(query);\n    setQuery('');\n    setMovie(null);\n    setIsError(false);\n    if (query || isError) {\n      setZminna(!zminna);\n    }\n  };\n\n  // const x = movie || zminna;\n\n  const addMovieToMovies = () => {\n    if (movie !== null && !arr.includes(movie)) {\n      getMovies(arr);\n      getArr([...arr, movie]);\n      setZminna(!zminna);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            {query.length === 0 ? (\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className=\"button is-light\"\n                onClick={handleClick}\n                disabled\n              >\n                Find a movie\n              </button>\n            ) : (\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className=\"button is-light\"\n                onClick={handleClick}\n              >\n                Find a movie\n              </button>\n            )}\n\n          </div>\n\n          {zminna && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieToMovies}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {zminna && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  useEffect(() => {\n    setMovies(movies);\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          getMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}